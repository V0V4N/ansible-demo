---

- name: Rename network interface to net0
  tags: [rename-interface, network]
  block:
    - name: Ensure required network packages are installed
      ansible.builtin.package:
        name:
          - "{{ 'iproute2' if ansible_os_family == 'Debian' else 'iproute' }}"
          - jq
        state: present
      become: true

    - name: Get default network interface from `ip route`
      ansible.builtin.command: "ip route show default"
      register: default_route
      changed_when: false
      become: true

    - name: Ensure a default route exists
      ansible.builtin.fail:
        msg: "No default route found. Cannot determine active network interface."
      when: default_route.stdout | trim == ""

    - name: Extract interface name from route output
      ansible.builtin.set_fact:
        active_interface: "{{ default_route.stdout | regex_findall('dev\\s+(\\S+)') | first | default('') }}"

    - name: Ensure an active interface was detected
      ansible.builtin.fail:
        msg: "Could not determine active network interface from default route."
      when: active_interface | trim == ""

    - name: Debug active network interface
      ansible.builtin.debug:
        msg: "Detected active network interface: {{ active_interface }}"

    - name: Get MAC address of the active interface
      ansible.builtin.command: "cat /sys/class/net/{{ active_interface }}/address"
      register: interface_mac
      changed_when: false
      become: true

    - name: Show detected network interface
      ansible.builtin.debug:
        msg: "Detected active network interface: {{ active_interface }} (MAC: {{ interface_mac.stdout }})"

    - name: Check if interface already has altname net0
      ansible.builtin.shell: >
        set -o pipefail &&
        ip -j link show {{ active_interface }} | jq -e '.[0].altnames | index("net0")' > /dev/null && echo 'exists' || echo 'missing'
      register: altname_check
      changed_when: false
      become: true
      failed_when: altname_check.rc not in [0, 1]
      args:
        executable: /bin/bash

    - name: Set alternative interface name `net0` (only if missing)
      ansible.builtin.command: "ip link property add dev {{ active_interface }} altname net0"
      become: true
      changed_when: true
      when: "'missing' in altname_check.stdout"

    - name: Get network interface details for net0
      ansible.builtin.command: "ip link show net0"
      register: new_interface_details
      changed_when: false
      become: true

    - name: Display net0 network interface information
      ansible.builtin.debug:
        msg: "{{ new_interface_details.stdout }}"

    - name: Ensure `udev` rule exists for alternative interface name
      ansible.builtin.lineinfile:
        path: "/etc/udev/rules.d/75-altname-net0.rules"
        line: 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="{{ interface_mac.stdout }}", RUN+="/sbin/ip link property add dev %k altname net0"'
        create: true
        mode: '0644'
      become: true
      notify:
        - Reload `udev` Rules
        - Trigger `udev` Rules
